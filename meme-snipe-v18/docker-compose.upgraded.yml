version: '3.8'

services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - meme_network

  dashboard:
    build: 
      context: ./dashboard
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - REDIS_URL=redis://redis:6379
    depends_on:
      - redis
    networks:
      - meme_network

  signer:
    build:
      context: ./signer
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - SOLANA_RPC_URL=https://api.mainnet-beta.solana.com
      - REDIS_URL=redis://redis:6379
      - PORT=8080
    depends_on:
      - redis
    volumes:
      - ./data:/data
    networks:
      - meme_network

  wallet_guard:
    build:
      context: ./wallet_guard
      dockerfile: Dockerfile
    ports:
      - "7070:7070"
    environment:
      - WALLET_ADDRESS=${WALLET_ADDRESS:-F1HRcZd3RnMJzRcX9j1MzjYB9Kj2Qk9Lp3Nm4xS5wVyZ}
      - SOLANA_RPC_URL=https://api.mainnet-beta.solana.com
      - REDIS_URL=redis://redis:6379
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7070/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - meme_network

  executor:
    build:
      context: ./executor
      dockerfile: Dockerfile
    ports:
      - "7080:7080"
    environment:
      - SOLANA_RPC_URL=https://api.mainnet-beta.solana.com
      - REDIS_URL=redis://redis:6379
      - JITO_TIP_AMOUNT=100000
      - SIGNER_URL=http://signer:8080
    depends_on:
      - redis
      - signer
    networks:
      - meme_network

  meta_allocator:
    build:
      context: ./meta_allocator
      dockerfile: Dockerfile
    ports:
      - "7090:7090"
    environment:
      - REDIS_URL=redis://redis:6379
      - SIGNER_URL=http://signer:8080
      - EXECUTOR_URL=http://executor:7080
    depends_on:
      - redis
      - signer
      - executor
    networks:
      - meme_network

  position_manager:
    build:
      context: ./position_manager
      dockerfile: Dockerfile
    ports:
      - "7100:7100"
    environment:
      - SOLANA_RPC_URL=https://api.mainnet-beta.solana.com
      - REDIS_URL=redis://redis:6379
      - SIGNER_URL=http://signer:8080
    depends_on:
      - redis
      - signer
    networks:
      - meme_network

  bridge_consumer:
    build:
      context: ./data_consumers
      dockerfile: Dockerfile
    command: python bridge_consumer.py
    environment:
      - REDIS_URL=redis://redis:6379
    depends_on:
      - redis
    networks:
      - meme_network

  depth_consumer:
    build:
      context: ./data_consumers
      dockerfile: Dockerfile
    command: python depth_consumer.py
    environment:
      - REDIS_URL=redis://redis:6379
    depends_on:
      - redis
    networks:
      - meme_network

  funding_consumer:
    build:
      context: ./data_consumers
      dockerfile: Dockerfile
    command: python funding_consumer.py
    environment:
      - REDIS_URL=redis://redis:6379
    depends_on:
      - redis
    networks:
      - meme_network

  helius_rpc_price_consumer:
    build:
      context: ./data_consumers
      dockerfile: Dockerfile
    command: python helius_rpc_price_consumer.py
    environment:
      - REDIS_URL=redis://redis:6379
      - HELIUS_API_KEY=${HELIUS_API_KEY}
    depends_on:
      - redis
    networks:
      - meme_network

  onchain_consumer:
    build:
      context: ./data_consumers
      dockerfile: Dockerfile
    command: python onchain_consumer.py
    environment:
      - REDIS_URL=redis://redis:6379
      - HELIUS_API_KEY=${HELIUS_API_KEY}
    depends_on:
      - redis
    networks:
      - meme_network

  strategy_factory:
    build:
      context: ./strategy_factory
      dockerfile: Dockerfile
    ports:
      - "9000:9000"
    environment:
      - REDIS_URL=redis://redis:6379
    depends_on:
      - redis
    networks:
      - meme_network

  alert_relay:
    build:
      context: ./alert_relay
      dockerfile: Dockerfile
    environment:
      - REDIS_URL=redis://redis:6379
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID}
      - DISCORD_WEBHOOK_URL=${DISCORD_WEBHOOK_URL}
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "ps", "aux", "|", "grep", "alert_relay"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - meme_network

  risk_guardian:
    build:
      context: ./risk_guardian
      dockerfile: Dockerfile
    ports:
      - "7200:7200"
    environment:
      - REDIS_URL=redis://redis:6379
      - MAX_PORTFOLIO_VAR=${MAX_PORTFOLIO_VAR:-10000}
      - MAX_DAILY_LOSS_USD=${MAX_DAILY_LOSS_USD:-5000}
      - MAX_POSITION_COUNT=${MAX_POSITION_COUNT:-50}
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7200/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - meme_network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - dashboard
      - signer
      - wallet_guard
      - executor
      - meta_allocator
      - position_manager
      - strategy_factory
    networks:
      - meme_network

volumes:
  redis_data:

networks:
  meme_network:
    driver: bridge
