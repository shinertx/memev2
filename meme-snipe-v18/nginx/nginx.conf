# MemeSnipe v18 - Single URL Reverse Proxy Configuration
# Best Practice: All services accessible through http://localhost

events {
    worker_connections 1024;
}

http {
    upstream dashboard {
        server dashboard:5000;
    }

    upstream signer {
        server signer:8989;
    }

server {
    listen 80;
    server_name localhost;
    
    # Security headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    # Main Dashboard - Root path
    location / {
        proxy_pass http://dashboard;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket support for real-time updates
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
    
    # Signer API endpoints
    location /api/signer/ {
        proxy_pass http://signer/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        
        # Remove /api/signer prefix before forwarding
        rewrite ^/api/signer/(.*) /$1 break;
    }
    
    # Health checks for all services
    location /health {
        return 200 '{"status":"healthy","services":["dashboard","signer"],"timestamp":"$time_iso8601","access":"http://localhost"}';
        add_header Content-Type application/json always;
    }
    
    # Individual service health checks
    location /health/dashboard {
        proxy_pass http://dashboard/health;
    }
    
    location /health/signer {
        proxy_pass http://signer/health;
    }
    
    # Static files and assets
    location /static/ {
        proxy_pass http://dashboard/static/;
    }
    
    # Dashboard API endpoints (trades, system status, etc.)
    location /api/trades {
        proxy_pass http://dashboard/api/trades;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
    
    location /api/system/ {
        proxy_pass http://dashboard/api/system/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
    
    # Generic API info endpoint
    location /api/ {
        return 200 '{"message":"MemeSnipe v18 API","endpoints":["/api/trades","/api/system/status","/api/signer/","/health"],"dashboard":"http://localhost"}';
        add_header Content-Type application/json always;
    }
    
    # Metrics endpoint
    location /metrics {
        return 200 '{"metrics_available":true,"prometheus_endpoint":"Available via dashboard","access_url":"http://localhost"}';
        add_header Content-Type application/json always;
    }
    
    # Security: Block access to sensitive paths
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
}

}
