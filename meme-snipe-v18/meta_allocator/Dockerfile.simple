# syntax=docker/dockerfile:1.4
FROM rust:1.75-slim AS builder

ARG BUILDKIT_INLINE_CACHE=1

RUN --mount=type=cache,target=/var/cache/apt \
    apt-get update && \
    apt-get install -y --no-install-recommends \
    build-essential \
    pkg-config \
    libssl-dev \
    clang \
    ca-certificates && \
    rm -rf /var/lib/apt/lists/*

WORKDIR /build

# Copy workspace configs
COPY Cargo.toml Cargo.lock ./
COPY meta_allocator/Cargo.toml meta_allocator/
COPY shared-models/Cargo.toml shared-models/

# Create dummy files for dependency caching
RUN mkdir -p meta_allocator/src shared-models/src && \
    echo "fn main() {}" > meta_allocator/src/main.rs && \
    echo "pub fn dummy() {}" > shared-models/src/lib.rs

# Pre-build dependencies
RUN --mount=type=cache,target=/usr/local/cargo/registry \
    --mount=type=cache,target=/usr/local/cargo/git \
    --mount=type=cache,target=/build/target \
    cargo build --release --package meta_allocator

# Copy actual source
COPY meta_allocator/src meta_allocator/src/
COPY shared-models/src shared-models/src/

# Build final binary
RUN --mount=type=cache,target=/usr/local/cargo/registry \
    --mount=type=cache,target=/usr/local/cargo/git \
    --mount=type=cache,target=/build/target \
    cargo build --release --package meta_allocator

# Runtime stage
FROM gcr.io/distroless/cc-debian12:latest

COPY --from=builder /build/target/release/meta_allocator /app/meta_allocator

WORKDIR /app
EXPOSE 8082

CMD ["./meta_allocator"]
